/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISLARegistry",
        name: "slaRegistry_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "whitelistedContract_",
        type: "bool",
      },
      {
        internalType: "uint128",
        name: "slaID_",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "leverage_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractOwner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dpTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "dpTokenName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "dpTokenSymbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "duTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "duTokenName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "duTokenSymbol",
        type: "string",
      },
    ],
    name: "DTokensCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "periodId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPercentagePrecision",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "ProviderRewardGenerated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "periodId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usersStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leverage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compensation",
        type: "uint256",
      },
    ],
    name: "UserCompensationGenerated",
    type: "event",
  },
  {
    inputs: [],
    name: "DSLAburnRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "addAllowedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_userAddresses",
        type: "address[]",
      },
    ],
    name: "addUsersToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dpTokenRegistry",
    outputs: [
      {
        internalType: "contract ERC20PresetMinterPauser",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "duTokenRegistry",
    outputs: [
      {
        internalType: "contract ERC20PresetMinterPauser",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllowedTokensLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "isAllowedToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "leverage",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providerPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredStakers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_userAddresses",
        type: "address[]",
      },
    ],
    name: "removeUsersFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slaID",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "usersPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistedContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b506040516200196738038062001967833981810160405260a08110156200003857600080fd5b5080516020820151604083015160608401516080909401519293919290919060006200006c6001600160e01b036200038f16565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350846001600160a01b031663683048356040518163ffffffff1660e01b815260040160206040518083038186803b158015620000f057600080fd5b505afa15801562000105573d6000803e3d6000fd5b505050506040513d60208110156200011c57600080fd5b5051600180546001600160a01b0319166001600160a01b0392831617905560408051639fc4caa560e01b8152905191871691639fc4caa591600480820192602092909190829003018186803b1580156200017557600080fd5b505afa1580156200018a573d6000803e3d6000fd5b505050506040513d6020811015620001a157600080fd5b505160601b6001600160601b03191660805283151560f81b6101005260015460408051637b8041cf60e11b8152905160009283926001600160a01b039091169163f700839e9160048082019261012092909190829003018186803b1580156200020957600080fd5b505afa1580156200021e573d6000803e3d6000fd5b505050506040513d6101208110156200023657600080fd5b50805160e09091015160015460408051638b8e530960e01b815290519395509193506001600160a01b031691638b8e530991600480820192602092909190829003018186803b1580156200028957600080fd5b505afa1580156200029e573d6000803e3d6000fd5b505050506040513d6020811015620002b557600080fd5b505160601b6001600160601b03191660a05260e08290526001600160a01b03831660009081526009602052604090208054600160ff19909116179055608085901b6001600160801b03191660c0526001600160401b03818116908516118015906200032a57506001846001600160401b031610155b62000371576040805162461bcd60e51b8152602060048201526012602482015271696e636f7272656374206c6576657261676560701b604482015290519081900360640190fd5b50505060c01b6001600160c01b031916610120525062000393915050565b3390565b60805160601c60a05160601c60c05160801c60e0516101005160f81c6101205160c01c611580620003e760003980610fa1525080610f7d52508061111452508061071652806113cf525050506115806000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063715018a6116100ad578063b7bc347e11610071578063b7bc347e146103f4578063cbe230c3146103fc578063f2db10fe14610422578063f2fde38b14610446578063fd5e6dd11461046c5761012c565b8063715018a6146103285780638d21c770146103305780638da5cb5b146103a05780639b19251a146103a8578063a7e8d8d4146103ce5761012c565b80634fb2647e116100f45780634fb2647e146102145780635ae698ff1461023a5780635c1c20de146102dd5780635e5f2e26146102e5578063639b6fc3146103025761012c565b8063171e44ea1461013157806318e45427146101595780632c86d98e14610175578063484fbf2b1461019a5780634e0c91f6146101d2575b600080fd5b6101576004803603602081101561014757600080fd5b50356001600160a01b0316610489565b005b610161610f7b565b604080519115158252519081900360200190f35b61017d610f9f565b6040805167ffffffffffffffff9092168252519081900360200190f35b6101c0600480360360208110156101b057600080fd5b50356001600160a01b0316610fc3565b60408051918252519081900360200190f35b6101f8600480360360208110156101e857600080fd5b50356001600160a01b0316610fd5565b604080516001600160a01b039092168252519081900360200190f35b6101f86004803603602081101561022a57600080fd5b50356001600160a01b0316610ff0565b6101576004803603602081101561025057600080fd5b81019060208101813564010000000081111561026b57600080fd5b82018360208201111561027d57600080fd5b8035906020019184602083028401116401000000008311171561029f57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061100b945050505050565b6101c0611112565b6101f8600480360360208110156102fb57600080fd5b5035611136565b6101c06004803603602081101561031857600080fd5b50356001600160a01b031661115d565b61015761116f565b6101576004803603602081101561034657600080fd5b81019060208101813564010000000081111561036157600080fd5b82018360208201111561037357600080fd5b8035906020019184602083028401116401000000008311171561039557600080fd5b50909250905061121b565b6101f8611331565b610161600480360360208110156103be57600080fd5b50356001600160a01b0316611340565b610161600480360360208110156103e457600080fd5b50356001600160a01b0316611355565b6101c061136a565b6101616004803603602081101561041257600080fd5b50356001600160a01b0316611370565b61042a6113cd565b604080516001600160801b039092168252519081900360200190f35b6101576004803603602081101561045c57600080fd5b50356001600160a01b03166113f1565b6101f86004803603602081101561048257600080fd5b50356114f3565b610491611500565b6001600160a01b03166104a2611331565b6001600160a01b0316146104eb576040805162461bcd60e51b8152602060048201819052602482015260008051602061152b833981519152604482015290519081900360640190fd5b60015460408051637b8041cf60e11b815290516000926001600160a01b03169163f700839e91600480830192610120929190829003018186803b15801561053157600080fd5b505afa158015610545573d6000803e3d6000fd5b505050506040513d61012081101561055c57600080fd5b5060c00151905061056c82611370565b156105ae576040805162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e481859191959609a1b604482015290519081900360640190fd5b6001546040805163cbe230c360e01b81526001600160a01b0385811660048301529151919092169163cbe230c3916024808301926020929190829003018186803b1580156105fb57600080fd5b505afa15801561060f573d6000803e3d6000fd5b505050506040513d602081101561062557600080fd5b5051610666576040805162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b604482015290519081900360640190fd5b6008805460018101825560008290527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b038516179055548110156106f8576040805162461bcd60e51b815260206004820152601060248201526f0dac2f040e8ded6cadc40d8cadccee8d60831b604482015290519081900360640190fd5b606073__$7481ba9d958a8dd8ef3f2e538c165f711b$__63fc966d457f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040180826001600160801b0316815260200191505060006040518083038186803b15801561077257600080fd5b505af4158015610786573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156107af57600080fd5b81019080805160405193929190846401000000008211156107cf57600080fd5b9083019060208201858111156107e457600080fd5b82516401000000008111828201881017156107fe57600080fd5b82525081516020918201929091019080838360005b8381101561082b578181015183820152602001610813565b50505050905090810190601f1680156108585780820380516001836020036101000a031916815260200191505b50604052505050905060608160405160200180806a44534c412d53484f52542d60a81b815250600b0182805190602001908083835b602083106108ac5780518252601f19909201916020918201910161088d565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905060608260405160200180806744534c412d53502d60c01b81525060080182805190602001908083835b6020831061092a5780518252601f19909201916020918201910161090b565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905060608360405160200180806944534c412d4c4f4e472d60b01b815250600a0182805190602001908083835b602083106109aa5780518252601f19909201916020918201910161098b565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905060608460405160200180806744534c412d4c502d60c01b81525060080182805190602001908083835b60208310610a285780518252601f199092019160209182019101610a09565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f19018352808552600154633350214760e11b8252600482019586528b5160448301528b51939850600097506001600160a01b031695506366a0428e948b94508a939092839260248101926064909101918701908083838d5b83811015610abf578181015183820152602001610aa7565b50505050905090810190601f168015610aec5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610b1f578181015183820152602001610b07565b50505050905090810190601f168015610b4c5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015610b6d57600080fd5b505af1158015610b81573d6000803e3d6000fd5b505050506040513d6020811015610b9757600080fd5b505160015460408051633350214760e11b8152600481019182528651604482015286519394506000936001600160a01b03909316926366a0428e92889288928291602481019160649091019060208701908083838d5b83811015610c05578181015183820152602001610bed565b50505050905090810190601f168015610c325780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610c65578181015183820152602001610c4d565b50505050905090810190601f168015610c925780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015610cb357600080fd5b505af1158015610cc7573d6000803e3d6000fd5b505050506040513d6020811015610cdd57600080fd5b8101908080519060200190929190505050905080600560008b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600460008b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550816001600160a01b0316816001600160a01b03168a6001600160a01b03167fce8c390dc55dbcd418078f1391fbb7d471c01c228fc4464926095354cb27c02987888b8c6040518080602001806020018060200180602001858103855289818151815260200191508051906020019080838360005b83811015610e10578181015183820152602001610df8565b50505050905090810190601f168015610e3d5780820380516001836020036101000a031916815260200191505b5085810384528851815288516020918201918a019080838360005b83811015610e70578181015183820152602001610e58565b50505050905090810190601f168015610e9d5780820380516001836020036101000a031916815260200191505b50858103835287518152875160209182019189019080838360005b83811015610ed0578181015183820152602001610eb8565b50505050905090810190601f168015610efd5780820380516001836020036101000a031916815260200191505b50858103825286518152865160209182019188019080838360005b83811015610f30578181015183820152602001610f18565b50505050905090810190601f168015610f5d5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a4505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60036020526000908152604090205481565b6004602052600090815260409020546001600160a01b031681565b6005602052600090815260409020546001600160a01b031681565b611013611500565b6001600160a01b0316611024611331565b6001600160a01b03161461106d576040805162461bcd60e51b8152602060048201819052602482015260008051602061152b833981519152604482015290519081900360640190fd5b60005b815181101561110e576009600083838151811061108957fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16611106576001600960008484815181106110c657fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600101611070565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6008818154811061114357fe5b6000918252602090912001546001600160a01b0316905081565b60026020526000908152604090205481565b611177611500565b6001600160a01b0316611188611331565b6001600160a01b0316146111d1576040805162461bcd60e51b8152602060048201819052602482015260008051602061152b833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b611223611500565b6001600160a01b0316611234611331565b6001600160a01b03161461127d576040805162461bcd60e51b8152602060048201819052602482015260008051602061152b833981519152604482015290519081900360640190fd5b60005b8181101561132c576009600084848481811061129857fe5b602090810292909201356001600160a01b031683525081019190915260400160002054600160ff90911615151415611324576000600960008585858181106112dc57fe5b905060200201356001600160a01b03166001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600101611280565b505050565b6000546001600160a01b031690565b60096020526000908152604090205460ff1681565b60076020526000908152604090205460ff1681565b60085490565b6000805b6008548110156113c257826001600160a01b03166008828154811061139557fe5b6000918252602090912001546001600160a01b031614156113ba5760019150506113c8565b600101611374565b50600090505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6113f9611500565b6001600160a01b031661140a611331565b6001600160a01b031614611453576040805162461bcd60e51b8152602060048201819052602482015260008051602061152b833981519152604482015290519081900360640190fd5b6001600160a01b0381166114985760405162461bcd60e51b81526004018080602001828103825260268152602001806115056026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6006818154811061114357fe5b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212204c1de6c81a35c5f293633e616ae32c2a350b60c4de9ba372d9a2f59982b4e67064736f6c63430006060033";

export class Staking__factory extends ContractFactory {
  constructor(linkLibraryAddresses: StakingLibraryAddresses, signer?: Signer) {
    super(_abi, Staking__factory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: StakingLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7481ba9d958a8dd8ef3f2e538c165f711b\\$__", "g"),
      linkLibraryAddresses["__$7481ba9d958a8dd8ef3f2e538c165f711b$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    slaRegistry_: string,
    whitelistedContract_: boolean,
    slaID_: BigNumberish,
    leverage_: BigNumberish,
    contractOwner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      slaRegistry_,
      whitelistedContract_,
      slaID_,
      leverage_,
      contractOwner_,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    slaRegistry_: string,
    whitelistedContract_: boolean,
    slaID_: BigNumberish,
    leverage_: BigNumberish,
    contractOwner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      slaRegistry_,
      whitelistedContract_,
      slaID_,
      leverage_,
      contractOwner_,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}

export interface StakingLibraryAddresses {
  ["__$7481ba9d958a8dd8ef3f2e538c165f711b$__"]: string;
}
