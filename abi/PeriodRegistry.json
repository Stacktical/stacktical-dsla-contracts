[
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "enum IPeriodRegistry.PeriodType",
        "name": "periodType",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "periodsAdded",
        "type": "uint256"
      }
    ],
    "name": "PeriodInitialized",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "enum IPeriodRegistry.PeriodType",
        "name": "periodType",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "periodsAdded",
        "type": "uint256"
      }
    ],
    "name": "PeriodModified",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "enum IPeriodRegistry.PeriodType",
        "name": "_periodType",
        "type": "uint8"
      },
      {
        "internalType": "uint256[]",
        "name": "_periodStarts",
        "type": "uint256[]"
      },
      {
        "internalType": "uint256[]",
        "name": "_periodEnds",
        "type": "uint256[]"
      }
    ],
    "name": "addPeriodsToPeriodType",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getPeriodDefinitions",
    "outputs": [
      {
        "components": [
          {
            "internalType": "bool",
            "name": "initialized",
            "type": "bool"
          },
          {
            "internalType": "uint256[]",
            "name": "starts",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256[]",
            "name": "ends",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct PeriodRegistry.PeriodDefinition[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum IPeriodRegistry.PeriodType",
        "name": "_periodType",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "_periodId",
        "type": "uint256"
      }
    ],
    "name": "getPeriodStartAndEnd",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "start",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "end",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum IPeriodRegistry.PeriodType",
        "name": "_periodType",
        "type": "uint8"
      },
      {
        "internalType": "uint256[]",
        "name": "_periodStarts",
        "type": "uint256[]"
      },
      {
        "internalType": "uint256[]",
        "name": "_periodEnds",
        "type": "uint256[]"
      }
    ],
    "name": "initializePeriod",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum IPeriodRegistry.PeriodType",
        "name": "_periodType",
        "type": "uint8"
      }
    ],
    "name": "isInitializedPeriod",
    "outputs": [
      {
        "internalType": "bool",
        "name": "initialized",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum IPeriodRegistry.PeriodType",
        "name": "_periodType",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "_periodId",
        "type": "uint256"
      }
    ],
    "name": "isValidPeriod",
    "outputs": [
      {
        "internalType": "bool",
        "name": "valid",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum IPeriodRegistry.PeriodType",
        "name": "",
        "type": "uint8"
      }
    ],
    "name": "periodDefinitions",
    "outputs": [
      {
        "internalType": "bool",
        "name": "initialized",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum IPeriodRegistry.PeriodType",
        "name": "_periodType",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "_periodId",
        "type": "uint256"
      }
    ],
    "name": "periodHasStarted",
    "outputs": [
      {
        "internalType": "bool",
        "name": "started",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum IPeriodRegistry.PeriodType",
        "name": "_periodType",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "_periodId",
        "type": "uint256"
      }
    ],
    "name": "periodIsFinished",
    "outputs": [
      {
        "internalType": "bool",
        "name": "finished",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
